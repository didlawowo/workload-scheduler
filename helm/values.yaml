# Default values for workload-scheduler
# This is a YAML-formatted file.

replicaCount: 1
image:
  repository: fizzbuzz2/workload-scheduler
  pullPolicy: IfNotPresent
  tag: "ffa45f5"
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 8000
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
resources:
  limits:
    cpu: 700m
    memory: 256Mi
  requests:
    cpu: 250m
    memory: 128Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 25%
    maxSurge: 25%
application:
  containerName: workload-scheduler
  ports:
    - name: http
      containerPort: 8000
      protocol: TCP
# Scheduler configuration
scheduler:
  replicas: 1
  resources:
    limits:
      cpu: 300m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi
# Environment variables
env:
  - name: API_URL
    value: "http://{{ include \"application.fullname\" . }}:8000"
  - name: ARGOCD_USERNAME
    value: "admin"
  - name: ARGOCD_PASSWORD
    value: "password"
  - name: ARGOCD_API_URL
    value: "http://argo-argocd-server.kube-infra.svc.cluster.local/api/v1"
  - name: JWT_SECRET_KEY
    value: "Wx7KpLzJ5q3RbT9dN8fEyU2mA6vH4cGQ"
# Health checks
livenessProbe:
  httpGet:
    path: /live
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /health
    port: 8000
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3
