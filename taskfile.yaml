version: '3'

vars:
  IMAGE_NAME: fizzbuzz2/workload-scheduler:v2.0.0

tasks:
  build:
    desc: Build Docker image
    cmds:
    - docker compose build --push

  run:
    desc: Run the Docker container
    cmds:
    - docker compose up -d

  show-logs:
    desc: Show logs from the running container
    cmds:
    - docker compose logs -f

  create-venv:
    desc: Create a virtual env
    cmds:
    - uv venv --python 3.12

  run-dev:
    desc: Run the app localy
    dir: src
    cmds:
    - uv run python main.py

  run-scheduler:
    desc: Run the scheduler localy
    dir: src
    cmds:
    - uv run python scheduler_engine.py

  helm-template:
    desc: template helm chart
    cmds:
    - helm template ./helm

  apply-deployment:
    desc: apply a deployment kubernetes
    cmds:
    - kubectl apply -f src/tests/deployment.yaml

  apply-stateful:
    desc: apply a deployment kubernetes
    cmds:
    - kubectl apply -f src/tests/stateful.yaml

  delete-deployment:
    desc: delete a deployment kubernetes
    cmds:
    - kubectl delete -f src/tests/deployment.yaml

  test-api:
    desc: run API unit tests
    cmds:
    - pytest src/tests/test_api.py -v

  test-integration:
    desc: run integration tests
    cmds:
    - pytest src/tests/test_integration.py -v

  test-argocd:
    desc: run argocd unit tests
    cmds:
    - pytest src/tests/test_argocd.py -v

  coverage-api:
    desc: run API unit tests with code coverage
    cmds:
    - coverage run -m pytest src/tests/test_api.py
    - coverage report -m

  coverage-integration:
    desc: run integration tests with code coverage
    cmds:
    - coverage run -m pytest src/tests/test_integration.py
    - coverage report -m

  coverage-argocd:
    desc: run argocd tests with code coverage
    cmds:
    - coverage run -m pytest src/tests/test_argocd.py
    - coverage report -m

  coverage-scheduler:
    desc: run scheduler tests with code coverage
    cmds:
    - coverage run -m pytest src/tests/test_scheduler.py
    - coverage report -m

  install-dep:
    desc: instell all dependences in requirements.txt
    cmds:
    - uv pip install -r requirements.txt

  default:
    desc: List available tasks
    cmds:
    - task --list
